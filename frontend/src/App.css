body, html, #root, .app {
  width: 100vw;
  height: 100vh;
  margin: 0;
  padding: 0;
  overflow: hidden;
  background: #181818;
}

.view-area {
  width: 100vw;
  height: 100vh;
  position: relative;
  overflow: hidden;
}

.fullscreen-vitessce {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 1;
  background: #181818;
}

.top-panel {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  z-index: 10;
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  padding: 20px;
  pointer-events: none;
}

.top-panel > * {
  pointer-events: auto;
}

.overlay-panel {
  position: fixed;
  top: 80px;
  right: 40px;
  min-width: 300px;
  max-width: 400px;
  background: rgba(255,255,255,0.15);
  border-radius: 8px;
  box-shadow: 0 2px 16px rgba(0,0,0,0.15);
  z-index: 10;
  padding: 20px;
  color: #fff;
  font-family: sans-serif;
  font-size: 1rem;
}

::-webkit-scrollbar {
  width: 0px;
  background: transparent;
}

/* Make the main App container a flex container */
.app {
  height: 100vh;
  width: 100vw;
  margin: 0;
  padding: 0;
  position: relative;
  overflow: hidden;
  background-color: #242424;
}

/* Base styles for each view area */
.view-area {
  position: relative;
  overflow: hidden;
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
}

/* Positioning the grid areas */


/* Ensure Vitessce container fills the flex parent */
.view-area > div:first-child { 
  flex: 1;
  min-height: 0; 
  position: relative; 
  display: flex;
  flex-direction: column;
}

/* Ensure the react-grid-layout fills its container */
.view-area .react-grid-layout {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
}

/* Grid items */
.react-grid-item {
  position: relative;
  width: 100%;
  height: 100%;
}

/* Vitessce container */
.vitessce-container {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
}

/* Style for the FIRST grid item (Spatial View - Fullscreen WITHIN Area) */
.view-area .react-grid-layout > .react-grid-item:nth-child(1) {
  position: absolute !important;
  left: 0 !important;
  top: 0 !important;
  width: 100% !important;
  height: 100% !important;
  transform: none !important;
  z-index: 1 !important;         /* Ensure it's below the panel */
  /* background-color: #f0f0f0; */ /* Optional background removed */
}

/* Style for the SECOND grid item (Spatial Panel - Overlay WITHIN Area) */
/* Using the final styles from before the grid change */
.view-area .react-grid-layout > .react-grid-item:nth-child(2) {
  position: absolute !important;
  right: 10px !important;        /* Final position from right */
  top: 25px !important;          /* Final position from top */
  width: 340px !important;       /* Final width */
  height: auto !important;       /* Final height */
  /* Use the max-height from user's edit */

  max-height: calc(80% ) !important;
  /* Add scaling */
  transform: scale(0.75) !important;
  transform-origin: top right !important; /* Scale from top right corner */


  /* Use the background from user's edit */
  background-color: rgba(255, 255, 255, 0.3) !important;
  z-index: 1 !important;
  overflow-y: auto !important;
  padding: 15px !important;
  border-radius: 6px !important; /* Final rounded corners */
   /* Use the shadow from user's edit */
  box-shadow: 0 1px 1px rgba(249, 247, 247, 0.05) !important;
  box-sizing: border-box !important;
   /* Use the text color from user's edit */

  color: #f0f0f0; /* Light text color */
  font-family: sans-serif;
  font-size: 0.9em;
}

/* Styling for Panel Inner Elements (transparent background) WITHIN each Area */
.view-area .react-grid-layout > .react-grid-item:nth-child(2) .vit-makeStyles-title,
.view-area .react-grid-layout > .react-grid-item:nth-child(2) .vit-makeStyles-card,
.view-area .react-grid-layout > .react-grid-item:nth-child(2) .vit-MuiPaper-root {
  background-color: transparent !important;
  box-shadow: none !important;
  color: #f0f0f0; /* Light text color */
  font-family: sans-serif;
  font-size: 0.9em;
}

/* Light Theme Styles */
@media (prefers-color-scheme: light) {
  .app {
    background-color: #ffffff;
  }
  
  button {
    background-color: #f9f9f9;
    color: #213547;
  }
}

/* Additional container for new divs */
.content-container {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  position: relative;
}

/* Generic div styles */
.generic-div {
  position: relative;
  width: 100%;
  height: auto;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* ROI Selector Container */
.roi-selector-container {
  position: absolute !important;
  left: 1px !important;
  top: 2px !important;
  z-index: 10 !important;
  background-color: transparent !important;
  border-radius: 10px !important;
  padding: 0 !important;
  margin: 0 !important;
  box-shadow: none !important;
  width: auto !important;
  height: auto !important;
  min-width: unset !important;
  max-width: unset !important;
  display: inline-block !important;
  line-height: 0 !important;
}

.roi-selector {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  pointer-events: none;
  margin: 0;
  padding: 0;
  line-height: 0;
}

.roi-box {
  position: absolute;
  border: 2px solid #00ff00;
  background-color: rgba(0, 255, 0, 0.1);
  pointer-events: auto;
  cursor: move;
  width: 800px;
  height: 800px;
  transform: translate(-50%, -50%);
  z-index: 1;
  margin: 0;
  padding: 0;
  line-height: 0;
}

.roi-info {
  position: absolute;
  top: 10px;
  left: 10px;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 5px 10px;
  border-radius: 4px;
  font-size: 12px;
  pointer-events: none;
  margin: 0;
  line-height: 1.2;
}

/* Panel Container */
.panel-container {
  position: absolute !important;
  right: 75px !important;
  top: 75px !important;
  width: 340px !important;
  height: auto !important;
  max-height: calc(80%) !important;
  transform: scale(0.75) !important;
  transform-origin: top right !important;
  background-color: rgba(255, 255, 255, .3) !important;
  z-index: 10 !important;
  overflow-y: auto !important;
  padding: 1px !important;
  border-radius: 6px !important;
  box-shadow: 0 1px 1px rgba(249, 247, 247, 0.05) !important;
  box-sizing: border-box !important;
  color: #f0f0f0;
  font-family: sans-serif;
  font-size: 0.9em;
}

/* Panel inner elements */
.panel-container .vit-makeStyles-title,
.panel-container .vit-makeStyles-card,
.panel-container .vit-MuiPaper-root {
  background-color: transparent !important;
  box-shadow: none !important;
  color: #f0f0f0;
  font-family: sans-serif;
  font-size: 0.9em;
}

.top-panel {
  z-index: 10;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
}

.left-panel {
  position: absolute;
  top: 30px;
  left: -30px;
  z-index: 15;
  background: transparent;
  padding: 0;
  margin: 0;
  box-shadow: none;
  width: auto;
  height: auto;
  min-width: unset;
  max-width: unset;
  color: #d8d5d5;
  font-family: sans-serif;
  font-size: 1rem;
}

